#This file contains the analyses and tables pertaining to the Body Map data, a questionnaire that asks about pain in 7 body areas over the previous 7 days.
#Other measures of visceral and psychological pain were analyzed in addition to the Body Map data. All of the data was pulled from multiple sources including REDCap and multiple Excel files.


#Install and load all necessary packages and libraries (tidyverse, ggplot, tableone, etc)


#Make an API call to the REDCap Database to access needed variables (Promis Stress vars, Promis Affect vars, CSI vars, Pain Interference, Weekly Pain, pt4a_cpmwater1, pt4a1_cpmwater2, bt7b_yellowpain, bt7c_redpain, tanner_q3, anxietyscore, depressionscore, pedpro_pain_q1, rome_a_q1, rome_b_q1)
#  LIST ALL ACTUAL VARS


#Make a Promis Stress Total variable for each participant that is a sum of the Promis Stress vars 
#NOTE: "result" is the name of the dataset of REDCap output, it will be used everytime data is called from the output
Promis_stress_total <- result %>% select(record_id, subject_id, promis_eos_p_011r1_c1b667, promis_eos_p_048r1_38a89a, promis_eos_p_063r1_3dce53, promis_eos_p_064r1_a4c868, promis_eos_p_067r1_9222a6, promis_eos_p_105r1_7be006, promis_eos_p_112r1_b3dead, promis_eos_p_118r1_d63498, redcap_event_name) %>% group_by(subject_id, redcap_event_name) %>% summarize(Promis_Stress_Total = sum(promis_eos_p_011r1_c1b667, promis_eos_p_064r1_a4c868, promis_eos_p_067r1_9222a6, promis_eos_p_048r1_38a89a, promis_eos_p_063r1_3dce53, promis_eos_p_105r1_7be006, promis_eos_p_112r1_b3dead, promis_eos_p_118r1_d63498)) %>% select(subject_id, Promis_Stress_Total, redcap_event_name)

#Rename redcap_event_name aka visit name to abbreviation that will be universal across all data
Promis_stress_total$redcap_event_name[Promis_stress_total$redcap_event_name == "baseline_visit_chi_arm_1"] <- "BL"
Promis_stress_total$redcap_event_name[Promis_stress_total$redcap_event_name == "visit_1_child_arm_1"] <- "PV1"
Promis_stress_total$redcap_event_name[Promis_stress_total$redcap_event_name == "visit2_child_arm_1"] <- "PV2"


#Make a Promis Affect Total variable for each participant that is a sum of the Promis Affect vars 
Promis_affect_total <- result %>% select(record_id, subject_id, promis_swb_p_027r1_994f1a, promis_swb_p_025r1_39adb5, promis_swb_p_026r1_9de210, promis_swb_p_029r1_d9f50e, promis_swb_p_037r1_f6219a,
promis_swb_p_049r1_de1fe6, promis_swb_p_001r1_86f828, promis_swb_p_004r1_981e59, redcap_event_name) %>% group_by(subject_id, redcap_event_name) %>% summarize(Promis_Affect_Total = sum(promis_swb_p_027r1_994f1a, promis_swb_p_025r1_39adb5, promis_swb_p_026r1_9de210, promis_swb_p_029r1_d9f50e, promis_swb_p_037r1_f6219a,
promis_swb_p_049r1_de1fe6, promis_swb_p_001r1_86f828, promis_swb_p_004r1_981e59)) %>% select(subject_id, Promis_Affect_Total, redcap_event_name)

#Rename redcap_event_name aka visit name to abbreviation that will be universal across all data
Promis_affect_total$redcap_event_name[Promis_affect_total$redcap_event_name == "baseline_visit_chi_arm_1"] <- "BL"
Promis_affect_total$redcap_event_name[Promis_affect_total$redcap_event_name == "visit_1_child_arm_1"] <- "PV1"
Promis_affect_total$redcap_event_name[Promis_affect_total$redcap_event_name == "visit2_child_arm_1"] <- "PV2"


#Merge Promis Affect Total and Promis Stress Total into one dataset 
promis_affect_stress <- merge(x = Promis_affect_total, y = Promis_stress_total, by = c("subject_id", "redcap_event_name")) #%>% filter(subject_id != 1)# %>%filter( subject_id != 800)


#Make a CSI Total var for each participant that is a sum of the CSI vars
CSI_total <- result %>% select(subject_id, csi_child_q1, csi_child_q2, csi_child_q3, csi_child_q4, csi_child_q5, csi_child_q6, csi_child_q7, csi_child_q8, csi_child_q9, csi_child_q10, csi_child_q11, csi_child_q12, csi_child_q13, csi_child_q14, csi_child_q15, csi_child_q16, csi_child_q17, csi_child_q18, csi_child_q19, csi_child_q20, csi_child_q21, csi_child_q22, csi_child_q23, csi_child_q24, redcap_event_name) %>% group_by(subject_id, redcap_event_name) %>%  summarize(CSSI_sum = sum(csi_child_q1, csi_child_q2, csi_child_q3, csi_child_q4, csi_child_q5, csi_child_q6, csi_child_q7, csi_child_q8, csi_child_q9, csi_child_q10, csi_child_q11, csi_child_q12, csi_child_q13, csi_child_q14, csi_child_q15, csi_child_q16, csi_child_q17, csi_child_q18, csi_child_q19, csi_child_q20, csi_child_q21, csi_child_q22, csi_child_q23, csi_child_q24))
#Rename redcap_event_name aka visit name to abbreviation that will be universal
CSI_total$redcap_event_name[CSI_total$redcap_event_name == "baseline_visit_chi_arm_1"] <- "BL"
CSI_total$redcap_event_name[CSI_total$redcap_event_name == "visit_1_child_arm_1"] <- "PV1"
CSI_total$redcap_event_name[CSI_total$redcap_event_name == "visit2_child_arm_1"] <- "PV2"


#Clinical Correlates -- These vars include Pain Intereference Score (REDCap), Weekly Pain (REDCap), Sensitivity Score on Body Map questionnaire
#These measures are key variable indicatiors of pain besides the Body Map questionnaire
ClinicalCorrelates_vars <- result %>% select(subject_id, redcap_event_name, pedpro_pain_q1, rome_a_q1, rome_b_q1, pedpro_interference_q1, pedpro_interference_q2, pedpro_interference_q3, pedpro_interference_q4, pedpro_interference_q5, pedpro_interference_q6, pedpro_interference_q7, pedpro_interference_q8) %>% group_by(subject_id, redcap_event_name) %>% summarise(PainInterfSum = sum(pedpro_interference_q1, pedpro_interference_q2, pedpro_interference_q3, pedpro_interference_q4, pedpro_interference_q5, pedpro_interference_q6, pedpro_interference_q7, pedpro_interference_q8))
ClinicalCorrelates_vars$redcap_event_name[ClinicalCorrelates_vars$redcap_event_name == "baseline_visit_chi_arm_1"] <- "BL"
ClinicalCorrelates_vars$redcap_event_name[ClinicalCorrelates_vars$redcap_event_name == "visit_1_child_arm_1"] <- "PV1"
ClinicalCorrelates_vars$redcap_event_name[ClinicalCorrelates_vars$redcap_event_name == "visit2_child_arm_1"] <- "PV2" 


#Merge Clinical Correlate vars with CSI total
#filter out any test subjects (1) and any other weird subject id numbers aka any that are not even numbers from 2-600
CC_rc <- merge(x = ClinicalCorrelates_vars, y = CSI_total, by = c("subject_id", "redcap_event_name")) %>% filter( subject_id != 800) %>% filter(subject_id != 81) %>% filter(subject_id != 1) 
#Check for duplicates
duplicated_values <- CC_rc[duplicated(CC_rc$subject_id), "Subject_id"]


#Merge CC_rc with Promis Affect and Stress Totals
NewTotals <- merge(x = promis_affect_stress, y = CC_rc, by = c("subject_id", "redcap_event_name")) %>% filter(subject_id != 1) %>%filter( subject_id != 800) %>% filter(subject_id != 81)


#Merge with rest of important REDCap vars
Combined_data <- result %>% select(record_id, subject_id, pt4a_cpmwater1, pt4a1_cpmwater2, bt7b_yellowpain, bt7c_redpain, tanner_q3, anxietyscore, depressionscore, redcap_event_name, pedpro_pain_q1, rome_a_q1, rome_b_q1, pedpro_interference_q1, pedpro_interference_q2, pedpro_interference_q3, pedpro_interference_q4, pedpro_interference_q5, pedpro_interference_q6, pedpro_interference_q7, pedpro_interference_q8) %>% filter(record_id != "1") %>%filter( subject_id != 800) %>% filter (subject_id != 81)

Combined_data$redcap_event_name[Combined_data$redcap_event_name == "baseline_visit_chi_arm_1"] <- "BL"
Combined_data$redcap_event_name[Combined_data$redcap_event_name == "baselinevisit_pare_arm_1"] <- "BL"

Combined_data$redcap_event_name[Combined_data$redcap_event_name == "visit_1_child_arm_1"] <- "PV1"
Combined_data$redcap_event_name[Combined_data$redcap_event_name == "visit_1_parent_arm_1"] <- "PV1"

Combined_data$redcap_event_name[Combined_data$redcap_event_name == "visit2_child_arm_1"] <- "PV2"
Combined_data$redcap_event_name[Combined_data$redcap_event_name == "visit_2_parent_arm_1"] <- "PV2"

Merged_data <- merge(x = Combined_data, y = NewTotals, by = c("subject_id", "redcap_event_name"))
Merged_data %>% select(record_id, pt4a_cpmwater1, pt4a1_cpmwater2, bt7b_yellowpain, bt7c_redpain, tanner_q3, anxietyscore, depressionscore, redcap_event_name, Promis_Affect_Total, Promis_Stress_Total, CSSI_sum, pedpro_pain_q1, rome_a_q1, rome_b_q1, PainInterfSum, subject_id, pedpro_pain_q1, rome_a_q1, rome_b_q1, pedpro_interference_q1, pedpro_interference_q2, pedpro_interference_q3, pedpro_interference_q4, pedpro_interference_q5, pedpro_interference_q6, pedpro_interference_q7, pedpro_interference_q8)


#Merge with vars from parent questionnaires (under differet sub id but same record id as child) -- these vars are the parent's ratings of their child's menstrual pain and the child's age
Parent_data <- result %>% select(record_id, painrating_parent_q1, demo_child_age, redcap_event_name) %>% filter(record_id != "1")

Parent_data$redcap_event_name[Parent_data$redcap_event_name == "baselinevisit_pare_arm_1"] <- "BL"
Parent_data$redcap_event_name[Parent_data$redcap_event_name == "visit_1_parent_arm_1"] <- "PV1"
Parent_data$redcap_event_name[Parent_data$redcap_event_name == "visit_2_parent_arm_1"] <- "PV2"

Parent_data %>% filter(redcap_event_name == "BL" | redcap_event_name == "PV1" | redcap_event_name == "PV2")

Final_merge <- merge(x = Parent_data, y = Merged_data, by = c("record_id", "redcap_event_name")) %>% filter(redcap_event_name != "phone_screen_arm_1" | redcap_event_name != "annual_year_1_arm_1") %>% filter(subject_id != 81)



#Merge in BodyMap and Sensitivity Questionnaires Data
#Load in excel files
#NOTE: the location will differ based on where the files are saved on the local machine
baseline_body_map_data <- read.csv("/Users/embur/OneDrive/Documents/DSCI101_updated/R/EMPATHY_visualizations/Tanner_Body Map_Fibromyalgia Data_BASELINE.csv")
PV1_body_map_data <- read.csv("/Users/embur/OneDrive/Documents/DSCI101_updated/R/EMPATHY_visualizations/Tanner_Body Map_Fibromyalgia Data_PV1.csv")
PV2_body_map_data <- read.csv("/Users/embur/OneDrive/Documents/DSCI101_updated/R/EMPATHY_visualizations/Tanner_Body Map_Fibromyalgia Data_PV2.csv")


#Select necessary vars 
baselineBodyMapTotal <- baseline_body_map_data %>% select(subject_id, BodyTotal, SensitivityTotal) 
#Rename cols to account for each visit number when merged
colnames(baselineBodyMapTotal)[2] <- ("BodyTotal BL")
colnames(baselineBodyMapTotal)[3] <- ("SensitivityTotal BL")
#Create binary var for widespread pain where if BodyTotal is less than 3, 0 is the value given, if BodyTotal is greater than 3, 1 is the value given
baselineBodyMapTotal$'Widespread Pain (0/1) BL' <- ifelse(baselineBodyMapTotal$'BodyTotal BL' < 3, 0, 1)

PV1BodyMapTotal <- PV1_body_map_data %>% select(BodyTotal, subject_id, SensitivityTotal) 
colnames(PV1BodyMapTotal)[1] <- ("BodyTotal PV1")
colnames(PV1BodyMapTotal)[3] <- ("SensitivityTotal PV1")
PV1BodyMapTotal$'Widespread Pain (0/1) PV1' <- ifelse(PV1BodyMapTotal$'BodyTotal PV1' < 3, 0, 1)

PV2BodyMapTotal <- PV2_body_map_data %>% select(BodyTotal, subject_id, SensitivityTotal) 
colnames(PV2BodyMapTotal)[1] <- ("BodyTotal PV2")
colnames(PV2BodyMapTotal)[3] <- ("SensitivityTotal PV2")
PV2BodyMapTotal$'Widespread Pain (0/1) PV2' <- ifelse(PV2BodyMapTotal$'BodyTotal PV2' < 3, 0, 1)


#Merge all visits together into one dataset
bodyMap_total_over_time <- baselineBodyMapTotal %>%
  full_join(PV1BodyMapTotal, by = c("subject_id")) %>%
  full_join(PV2BodyMapTotal, by = c("subject_id"))


#Transform data for SenstitivityTotal of each visit into one col with at most 3 rows of values for each participant
combo <- bodyMap_total_over_time %>%  select(`SensitivityTotal BL`, `SensitivityTotal PV1`, `SensitivityTotal PV2`, subject_id) %>% pivot_longer(cols = c("SensitivityTotal BL", "SensitivityTotal PV1", "SensitivityTotal PV2"), names_to =  "redcap_event_name", values_to =  "SensitivityTotal")
#Rename vars to remain consistent with other use of redcap_event_name
combo$redcap_event_name[combo$redcap_event_name == "SensitivityTotal BL"] <- "BL"
combo$redcap_event_name[combo$redcap_event_name == "SensitivityTotal PV1"] <- "PV1"
combo$redcap_event_name[combo$redcap_event_name == "SensitivityTotal PV2"] <- "PV2"

#Transform data for BodyTotal of each visit into one col with at most 3 rows of values for each participant
new <- bodyMap_total_over_time %>% select(subject_id, `BodyTotal BL`, `BodyTotal PV1`, `BodyTotal PV2`) %>% pivot_longer(cols = c(`BodyTotal BL`, `BodyTotal PV1`, `BodyTotal PV2`), names_to = "redcap_event_name", values_to = "Body_Total")
#Rename vars to remain consistent with other use of redcap_event_name
new$redcap_event_name[new$redcap_event_name == "BodyTotal BL"] <- "BL"
new$redcap_event_name[new$redcap_event_name == "BodyTotal PV1"] <- "PV1"
new$redcap_event_name[new$redcap_event_name == "BodyTotal PV2"] <- "PV2"



-------------------PICK UP HERE-----------------------------
new_merge <- merge(x = combo, y = new, by = c("subject_id", "redcap_event_name"))
new_new_merge <- merge(x = new_merge, y = bodyMap_total_over_time, by = c( "subject_id"))


newer <- new_new_merge %>% pivot_longer (cols = -c(subject_id, redcap_event_name, Body_Total, SensitivityTotal, `BodyTotal BL`, `BodyTotal PV1`, `BodyTotal PV2`, `SensitivityTotal BL`, `SensitivityTotal PV1`, `SensitivityTotal PV2`), names_to = "event", values_to ="Widespread Pain (0/1)" ) %>% select(subject_id, redcap_event_name, Body_Total, SensitivityTotal) %>% distinct () %>% mutate("Widespread Pain (0/1) (No/Yes)" = Body_Total < 3)

newer$`Widespread Pain (0/1) (No/Yes)` <- ifelse(
    
        is.na(newer$Body_Total), NA,
        ifelse (newer$Body_Total %in% c(0, 1, 2), 0, 1)
)





## Merge with rest of data

FINAL_merge <- merge(x = newer, y = Final_merge, by = c("subject_id", "redcap_event_name")) %>% distinct() #%>% na.omit(FINAL_merge$subject_id)

#FINAL_merge$Value[FINAL_merge$Value == "Non Widespread Pain (<3)"] <- "0"
#FINAL_merge$Value[FINAL_merge$Value == "Widespread Pain (>=3)"] <- "1"


#ADDING IN QST DATA -- but this is only the data for BL, but it is aslo applying itself to PV1 and PV2... just BE AWARE
qst_baseline_data <- read.csv("C:/Users/embur/Downloads/Esleep_baseline_Final_11.6.22.csv")

select_qst <- qst_baseline_data %>% mutate(redcap_event_name = "BL") %>% select(C1_Vis_Gracely_mean, C1_Vis_Gracely_slope, C1_Aud_Gracely_mean, C1_Aud_Gracely_slope, C1_PPTavg, C1_CPMchange, C1_CPMppt, C_ID, redcap_event_name)

## rename sub id variable
colnames(select_qst)[which(names(select_qst) == "C_ID")] <- "subject_id"


qst_rc_bm_merge <- FINAL_merge %>% left_join(select_qst, by = c("subject_id", "redcap_event_name"))
BL <- qst_rc_bm_merge %>% filter(redcap_event_name == "BL") 
